{"ast":null,"code":"import _toConsumableArray from \"/Users/AllHeart/Desktop/Misc code stuff/Projects/search-concerts-by-artist-fullstack-capstone-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ARTIST_SEARCH_FORM, LOGIN_FORM, SIGNUP_FORM } from './actions/actions';\nvar initialState = {\n  loggedInUserName: '',\n  artists: {},\n  concerts: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === LOGIN_FORM) {\n    return Object.assign({}, state, {\n      loggedInUserName: ''\n    });\n  }\n\n  if (action.type === SIGNUP_FORM) {\n    return Object.assign({}, state, {\n      loggedInUserName: _toConsumableArray(state.loggedInUserName)\n    });\n  }\n\n  if (action.type === ARTIST_SEARCH_FORM) {\n    var artists = state; // CALEB on input if artist success notification + add to list : message(err)\n    //        if (guesses.length > 0) {\n    //            auralStatus += ` ${pluralize\n    //                ? 'In order of most- to least-recent, they are'\n    //            : 'It was'}: ${guesses.reverse().join(', ')}`;\n    //        }\n    //CALEB varify below\n\n    return Object.assign({}, state, {\n      artistSearch: artistSearch\n    });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/AllHeart/Desktop/Misc code stuff/Projects/search-concerts-by-artist-fullstack-capstone-react/src/reducers/reducer.js"],"names":["ARTIST_SEARCH_FORM","LOGIN_FORM","SIGNUP_FORM","initialState","loggedInUserName","artists","concerts","state","action","type","Object","assign","artistSearch"],"mappings":";AAAA,SAAQA,kBAAR,EAA4BC,UAA5B,EAAwCC,WAAxC,QAA0D,mBAA1D;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAC,EADA;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,QAAQ,EAAC;AAHQ,CAArB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAE7C,MAAIA,MAAM,CAACC,IAAP,KAAgBR,UAApB,EAAgC;AAC5B,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,MAAAA,gBAAgB,EAAC;AADW,KAAzB,CAAP;AAGH;;AAED,MAAII,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAE7B,WAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BH,MAAAA,gBAAgB,qBAAMG,KAAK,CAACH,gBAAZ;AADY,KAAzB,CAAP;AAGH;;AAED,MAAII,MAAM,CAACC,IAAP,KAAgBT,kBAApB,EAAwC;AACpC,QAAMK,OAAO,GAAGE,KAAhB,CADoC,CAEpC;AACR;AACA;AACA;AACA;AACA;AACA;;AACQ,WAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACK,MAAAA,YAAY,EAAZA;AAAD,KAAzB,CAAP;AACH;;AAED,SAAOL,KAAP;AACH,CA5BD","sourcesContent":["import {ARTIST_SEARCH_FORM, LOGIN_FORM, SIGNUP_FORM} from './actions/actions';\n\nconst initialState = {\n    loggedInUserName:'',\n    artists: {},\n    concerts:{},\n};\n\nexport default (state = initialState, action) => {\n\n    if (action.type === LOGIN_FORM) {\n        return Object.assign({}, state, {\n            loggedInUserName:''\n        });\n    }\n\n    if (action.type === SIGNUP_FORM) {\n\n        return Object.assign({}, state, {\n            loggedInUserName: [...state.loggedInUserName]\n        });\n    }\n\n    if (action.type === ARTIST_SEARCH_FORM) {\n        const artists = state;\n        // CALEB on input if artist success notification + add to list : message(err)\n//        if (guesses.length > 0) {\n//            auralStatus += ` ${pluralize\n//                ? 'In order of most- to least-recent, they are'\n//            : 'It was'}: ${guesses.reverse().join(', ')}`;\n//        }\n//CALEB varify below\n        return Object.assign({}, state, {artistSearch});\n    }\n\n    return state;\n};\n"]},"metadata":{},"sourceType":"module"}